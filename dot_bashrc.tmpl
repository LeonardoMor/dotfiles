#
# ~/.bashrc
#

# ble.sh this has to be the first line. Notice, if not running interactively,
# don't do anything
[[ $- != *i* ]] && return
export BLESH_PATH=/usr/share/blesh
source "${BLESH_PATH}/ble.sh" --noattach

# Command history settings
# Don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
# Append to the history file, don't overwrite it
shopt -s histappend
# For setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=3000
HISTFILESIZE=4000

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# Enable color support of ls and grep and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	alias ls='ls --color=auto'
	alias dir='dir --color=auto'
	alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

# Load alias file if it exists
if [[ -f ~/.bash_aliases ]]; then
	. ~/.bash_aliases
fi

# PATH settings
if ! [[ $PATH =~ $HOME/.local/bin:$HOME/bin: ]]; then
	export PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi

# XDG Base Dir spec https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
# https://wiki.archlinux.org/title/XDG_Base_Directory
export XDG_CONFIG_HOME={{ printf "${XDG_CONFIG_HOME:-%s}" .XDG_CONFIG_HOME | quote }}
export XDG_CACHE_HOME={{ printf "${XDG_CACHE_HOME:-%s}" .XDG_CACHE_HOME | quote }}
export XDG_DATA_HOME={{ printf "${XDG_DATA_HOME:-%s}" .XDG_DATA_HOME | quote }}
export XDG_STATE_HOME={{ printf "${XDG_STATE_HOME:-%s}" .XDG_STATE_HOME | quote }}
export XDG_DATA_DIRS={{ printf "${XDG_DATA_DIRS:-%s}" .XDG_DATA_DIRS | quote }}
export XDG_CONFIG_DIRS={{ printf "${XDG_CONFIG_DIRS:-%s}" .XDG_CONFIG_DIRS | quote }}
for d in "$XDG_CONFIG_HOME" "$XDG_CACHE_HOME" "$XDG_DATA_HOME" "$XDG_STATE_HOME"; do
	mkdir -p "$d"
done

# Other environment variables
export VISUAL=nvim
export EDITOR="$VISUAL"
export NVIM_LOG_FILE="${XDG_CACHE_HOME}/nvim/log"
{{- if eq .chezmoi.hostname "cassini" }}
export BROWSER=firefox
export LIBVIRT_DEFAULT_URI='qemu:///system'
{{- end }}

# fzf theme
source "${XDG_DATA_HOME}/nvim/lazy/tokyonight.nvim/extras/fzf/tokyonight_night.sh"

# Enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
	if [[ -f ${XDG_CONFIG_HOME}/bash-completion/bash_completion ]]; then
		export BASH_COMPLETION_USER_FILE="${XDG_CONFIG_HOME}/bash-completion/bash_completion"
		. "$BASH_COMPLETION_USER_FILE"
	elif [[ -f /etc/bash_completion ]]; then
		. /etc/bash_completion
	fi
fi

{{- if eq .chezmoi.os "darwin" }}
# Set Homebrew-file
if [[ -f $(brew --prefix)/etc/brew-wrap ]]; then
	source $(brew --prefix)/etc/brew-wrap

	_post_brewfile_update() (
		cd "$(chezmoi source-path)" || {
			printf 'Failed to cd to %s\n' "$(chezmoi source-path)" >&2
			return 1
		}
		git add .
		read -rp 'Commit message: '
		git commit -m "$REPLY"
		git push origin master
	)
fi
{{- end }}

# This will take care of the ssh agent and keys
eval "$(keychain --quiet --nogui --eval id_ed25519)"

# Starship Prompt
eval "$(starship init bash)"

# nvm
[[ -z $NVM_DIR ]] && export NVM_DIR=/usr/share/nvm
source "${NVM_DIR}/nvm.sh"
source "${NVM_DIR}/bash_completion"
source "${NVM_DIR}/install-nvm-exec"

# ble.sh: this has to be the last line
[[ ${BLE_VERSION-} ]] && ble-attach
