set -as terminal-features ",xterm-256color:RGB"
set-option -as terminal-overrides ",xterm*:Tc"
set -g mouse on

# Set prefix
{{- if eq .chezmoi.os "darwin" }}
unbind C-b
set -g prefix C-a
bind C-a send-prefix
set-option -g default-shell {{.brew_prefix}}/bin/bash
{{- else }}
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix
{{- end }}

# Shift Alt vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window

# Resize splits
bind -n M-Left resize-pane -L 10
bind -n M-Right resize-pane -R 10
bind -n M-Up resize-pane -U 10
bind -n M-Down resize-pane -D 10

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# This is for osc52 to work correctly with NeoVim, when it is running inside an ssh session inside tmux
set -s set-clipboard on

# Setup tpm
set -g @plugin 'tmux-plugins/tpm'

# Theme options
# set -g @plugin "janoamaral/tokyo-night-tmux"
# set -g @tokyo-night-tmux_window_id_style none
# set -g @tokyo-night-tmux_pane_id_style hsquare
# set -g @tokyo-night-tmux_zoom_id_style dsquare
source-file "${XDG_DATA_HOME}/nvim/lazy/tokyonight.nvim/extras/tmux/tokyonight_night.tmux"

# List of plugins
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'omerxx/tmux-floax'
set -g @plugin 'tmux-plugins/tmux-open'
# Restore nvim sessions and pane contents
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'


# set vi-mode
set-window-option -g mode-keys vi
# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# Start new panes in current directory
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See:
#   https://github.com/christoomey/vim-tmux-navigator
#   https://github.com/alexghergh/nvim-tmux-navigation 

# decide whether we're in a process that we want to ignore
is_vim="ps -o state= -o comm= -t '#{pane_tty}'\
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
bind C-\\ send-keys 'C-\'
bind C-l send-keys 'C-l'
# end of smart pane switching

# ble.sh execute multiline command
bind C-j send-keys 'C-j'

# tmux-sessionx options
set -g @sessionx-custom-paths "${HOME}/source/repos"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
